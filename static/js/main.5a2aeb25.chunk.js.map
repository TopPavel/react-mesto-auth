{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","images/logo.svg","components/ImagePopup.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ProtectedRoute.js","components/Sign.js","utils/auth.js","components/Register.js","components/Login.js","components/PopupWithNotification.js","components/RegisterNotificationPopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","alt","src","logo","path","to","email","onClick","onExit","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardDelete","onCardLike","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","i","link","type","name","length","Main","onEditAvatar","avatar","about","onEditProfile","onAddPlace","cards","map","item","onSelectCard","onLikeClick","ImagePopup","isOpened","onClose","event","target","classList","contains","api","options","_checkResponse","res","ok","json","Promise","reject","status","this","baseUrl","headers","fetch","method","then","data","body","JSON","stringify","cardId","authorization","PopupWithForm","title","children","onSubmit","EditProfilePopup","memo","isOpen","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","id","maxLength","minLength","placeholder","required","value","onChange","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","placeName","setPlaceName","setLink","ProtectedRoute","Component","component","loggedIn","Sign","onSend","nav","auth","signIn","password","token","localStorage","setItem","getContent","jwt","signUp","Register","handleNotification","history","useHistory","setEmail","setPassword","r","push","catch","Login","handleLogin","PopupWithNotification","isSuccess","message","RegisterNotificationPopup","setMessage","App","isNotificationPopupOpen","setIsNotificationPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isDeleteCard","setIsDeleteCard","selectedCard","setSelectedCard","isOpenedCard","setIsOpenedCard","setCurrentUser","setCards","setLoggedIn","userEmail","setUserEmail","isSuccessRegister","setIsSuccessRegister","getUserInfo","err","console","log","getInitialCards","tokenCheck","handleClosePopup","key","closeAllPopups","document","addEventListener","removeEventListener","getItem","Provider","clear","changeLikeCardStatus","newCard","c","deleteCard","filter","setUserInfo","finally","setAvatar","createSomeOneCards","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8NA+BeA,EA5BA,SAACC,GAEZ,OACI,yBAAQC,UAAU,SAAlB,UACI,qBAAKC,IAAI,4EAAgBD,UAAU,eAAeE,IAAKH,EAAMI,OAC7D,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,WAAZ,SACI,qBAAKJ,UAAW,sBAAhB,SACI,cAAC,IAAD,CAAMA,UAAU,eAAeK,GAAG,WAAlC,gDAGR,cAAC,IAAD,CAAOD,KAAK,WAAZ,SACI,qBAAKJ,UAAW,sBAAhB,SACI,cAAC,IAAD,CAAMA,UAAW,eAAgBK,GAAG,WAApC,8HAGR,cAAC,IAAD,CAAOD,KAAK,IAAZ,SACI,sBAAKJ,UAAW,sBAAhB,UACI,mBAAGA,UAAU,WAAb,SAAyBD,EAAMO,QAC/B,cAAC,IAAD,CAAMN,UAAW,eAAgBK,GAAG,WAAWE,QAASR,EAAMS,OAA9D,wDCpBXC,EAAqBC,IAAMC,cAAc,IC0CvCC,EAzCF,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,WAEtCC,EAAcC,qBAAWT,GACzBU,EAAQN,EAAKO,MAAMC,MAAQJ,EAAYI,IACvCC,EAAUT,EAAKU,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,MAAQJ,EAAYI,OAe3D,OACI,mCACI,qBAAIrB,UAAU,qBAAd,UACI,qBAAKC,IAAI,oGAAoBD,UAAU,sBAAsBE,IAAKW,EAAKa,KAAMnB,QAfrE,WAChBO,EAAYD,MAgBAM,GACA,wBAAQnB,UAAU,yBAAyB2B,KAAK,SAASpB,QAdpD,WACjBQ,EAAaF,MAeL,sBAAKb,UAAU,4BAAf,UACI,oBAAIA,UAAU,sBAAd,SAAqCa,EAAKe,OAC1C,sBAAK5B,UAAU,gBAAf,UACI,wBAAQA,UAAS,+BAA0BsB,GAzBxC,iBAyBqEK,KAAK,SACrEpB,QAhBJ,WACpBS,EAAWH,MAgBK,mBAAGb,UAAU,sBAAb,SAAoCa,EAAKU,MAAMM,qBCSxDC,EAxCF,SAAC/B,GACV,IAAMkB,EAAcC,qBAAWT,GAE/B,OACI,iCACI,0BAAST,UAAU,UAAnB,UACI,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,4BAA4BO,QAASR,EAAMgC,aAA1D,UACI,qBAAK9B,IAAI,uCAASD,UAAU,kBAAkBE,IAAKe,EAAYe,SAC/D,sBAAMhC,UAAU,6BAEpB,sBAAKA,UAAU,uBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,sBAAd,SAAqCiB,EAAYW,OACjD,mBAAG5B,UAAU,0BAAb,SAAwCiB,EAAYgB,WAExD,wBAAQjC,UAAU,mBAAmB2B,KAAK,SAASpB,QAASR,EAAMmC,sBAG1E,wBAAQlC,UAAU,cAAc2B,KAAK,SAASpB,QAASR,EAAMoC,gBAEjE,yBAASnC,UAAU,UAAnB,SACI,oBAAIA,UAAU,gBAAd,SACKD,EAAMqC,MAAMP,OAAS,GACtB9B,EAAMqC,MAAMC,KAAI,SAAAC,GAAI,OACZ,cAAC,EAAD,CACMzB,KAAMyB,EACNxB,YAAaf,EAAMwC,aACnBxB,aAAchB,EAAMgB,aACpBC,WAAYjB,EAAMyC,aAJbF,EAAKjB,gBC7B7B,MAA0B,iCCoB1BoB,EAlBI,SAAC,GAA+B,IAA9B5B,EAA6B,EAA7BA,KAAM6B,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QAEjC,OACI,qBAAK3C,UAAS,2BAAsB0C,EAAW,eAAiB,IAAMnC,QAAS,SAAAqC,IACvEA,EAAMC,OAAOC,UAAUC,SAAS,UAC7BH,EAAMC,OAAOC,UAAUC,SAAS,kBACnCJ,KAHR,SAMI,sBAAK3C,UAAU,uBAAf,UACI,qBAAKC,IAAI,qEAAcD,UAAU,eAAeE,IAAKW,EAAKa,OAC1D,oBAAI1B,UAAU,qBAAd,SAAoCa,EAAKe,OACzC,wBAAQ5B,UAAU,eAAe2B,KAAK,iB,gBCqFvCqB,EARH,I,WA1FR,WAAYC,GAAU,yBAuFtBC,eAAiB,SAACC,GAAD,OAASA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAR,gDAA0BJ,EAAIK,UAtF1EC,KAAKC,QAAUT,EAAQS,QACvBD,KAAKE,QAAUV,EAAQU,Q,8DAIvB,OAAOC,MAAM,GAAD,OAAIH,KAAKC,QAAT,UAA0B,CAClCG,OAAQ,MACRF,QAASF,KAAKE,UAEbG,KAAKL,KAAKP,kB,yCAGAa,GACf,OAAOH,MAAM,GAAD,OAAIH,KAAKC,QAAT,UAA0B,CAClCG,OAAQ,OACRF,QAASF,KAAKE,QACdK,KAAMC,KAAKC,UAAU,CACjBtC,KAAMmC,EAAKnC,KACXF,KAAMqC,EAAKrC,SAGdoC,KAAKL,KAAKP,kB,oCAIf,OAAOU,MAAM,GAAD,OAAIH,KAAKC,QAAT,aAA6B,CACrCG,OAAQ,MACRF,QAASF,KAAKE,UAEbG,KAAKL,KAAKP,kB,kCAGPa,GACR,OAAOH,MAAM,GAAD,OAAIH,KAAKC,QAAT,aAA6B,CACrCG,OAAQ,QACRF,QAASF,KAAKE,QACdK,KAAMC,KAAKC,UAAU,CACjBtC,KAAMmC,EAAKnC,KACXK,MAAO8B,EAAK9B,UAGf6B,KAAKL,KAAKP,kB,iCAGRrC,GACP,OAAO+C,MAAM,GAAD,OAAIH,KAAKC,QAAT,kBAA0B7C,EAAKQ,KAAO,CAC9CwC,OAAQ,SACRF,QAASF,KAAKE,UAEbG,KAAKL,KAAKP,kB,2CAGEiB,EAAQ7C,GACzB,OAAOA,EACHsC,MAAM,GAAD,OAAIH,KAAKC,QAAT,wBAAgCS,GAAU,CAC3CN,OAAQ,MACRF,QAASF,KAAKE,UAEbG,KAAKL,KAAKP,gBAEbU,MAAM,GAAD,OAAIH,KAAKC,QAAT,wBAAgCS,GAAU,CAC7CN,OAAQ,SACRF,QAASF,KAAKE,UAEbG,KAAKL,KAAKP,kB,iCAGZiB,GACP,OAAOP,MAAM,GAAD,OAAIH,KAAKC,QAAT,wBAAgCS,GAAU,CAClDN,OAAQ,SACRF,QAASF,KAAKE,UAEbG,KAAKL,KAAKP,kB,gCAGTxB,GACN,OAAOkC,MAAM,GAAD,OAAIH,KAAKC,QAAT,oBAAoC,CAC5CG,OAAQ,QACRF,QAASF,KAAKE,QACdK,KAAMC,KAAKC,UAAU,CACjBlC,OAAQN,MAGXoC,KAAKL,KAAKP,oB,KAMX,CAAQ,CAChBQ,QAAS,8CACTC,QAAS,CACLS,cAAe,uCACf,eAAgB,sBCzETC,EApBO,SAAC,GAA0D,IAAzDzC,EAAwD,EAAxDA,KAAM0C,EAAkD,EAAlDA,MAAO5B,EAA2C,EAA3CA,SAAU6B,EAAiC,EAAjCA,SAAU5B,EAAuB,EAAvBA,QAAS6B,EAAc,EAAdA,SAE9D,OACI,qBAAKxE,UAAS,2BAAsB4B,EAAtB,YAA8Bc,GAAY,gBAAkBnC,QAAS,SAAAqC,IAC3EA,EAAMC,OAAOC,UAAUC,SAAS,UAC7BH,EAAMC,OAAOC,UAAUC,SAAS,kBACnCJ,EAAQC,IAHhB,SAMI,sBAAK5C,UAAU,iBAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BsE,IAC9B,sBAAMtE,UAAU,6BAA6B4B,KAAI,UAAKA,EAAL,SAAkB4C,SAAUA,EAA7E,SACKD,IAEL,wBAAQvE,UAAU,eAAe2B,KAAK,iBC8CvC8C,EA1DU/D,IAAMgE,MAAK,YAAsC,IAApCC,EAAmC,EAAnCA,OAAQhC,EAA2B,EAA3BA,QAASiC,EAAkB,EAAlBA,aACzC3D,EAAcC,qBAAWT,GADkC,EAEzCoE,mBAAS,IAFgC,mBAE1DjD,EAF0D,KAEpDkD,EAFoD,OAG3BD,mBAAS,IAHkB,mBAG1DE,EAH0D,KAG7CC,EAH6C,KAKjEC,qBAAU,WACNH,EAAQ7D,EAAYW,MAAQ,IAC5BoD,EAAe/D,EAAYgB,OAAS,MACrC,CAAChB,IAcJ,OACI,eAAC,EAAD,CAAeW,KAAM,UACN0C,MAAO,4HACP5B,SAAUiC,EACVhC,QAASA,EACT6B,SAjBE,SAACU,GAClBA,EAAEC,iBACFP,EAAa,CACThD,OACAK,MAAO8C,KASX,UAMI,uBAAO/E,UAAU,eACVoF,GAAG,OACHC,UAAU,KACVC,UAAU,IACV1D,KAAK,OACL2D,YAAY,qBACZC,UAAQ,EAAC7D,KAAK,OACd8D,MAAO7D,EACP8D,SAnBU,SAACR,GAAD,OAAOJ,EAAQI,EAAErC,OAAO4C,UAqBzC,sBAAML,GAAG,aAAapF,UAAU,qBAAhC,+LACA,uBAAOA,UAAU,eACVoF,GAAG,OACHC,UAAU,MACVC,UAAU,IACV1D,KAAK,OACL2D,YAAY,8FACZC,UAAQ,EAAC7D,KAAK,OACd8D,MAAOV,EACPW,SA5BiB,SAACR,GAAD,OAAOF,EAAeE,EAAErC,OAAO4C,UA8BvD,sBAAML,GAAG,aAAapF,UAAU,qBAAhC,+LACA,wBAAQA,UAAU,oCAAoC2B,KAAK,SAA3D,0ECfDgE,EArCSjF,IAAMgE,MAAK,YAAwC,IAAtCC,EAAqC,EAArCA,OAAQhC,EAA6B,EAA7BA,QAASiD,EAAoB,EAApBA,eACxCC,EAAYC,mBAElBb,qBAAU,WACNY,EAAUE,QAAQN,MAAQ,MAU9B,OACI,eAAC,EAAD,CAAe7D,KAAM,SACN0C,MAAO,wFACP5B,SAAUiC,EACVhC,QAASA,EACT6B,SAZE,SAACU,GAClBA,EAAEC,iBACFS,EAAe,CACX5D,OAAQ6D,EAAUE,QAAQN,SAK9B,UAMI,uBAAOzF,UAAU,eACVoF,GAAG,SACHxD,KAAK,OACL2D,YAAY,qGACZC,UAAQ,EAAC7D,KAAK,MACdqE,IAAKH,IAEZ,sBAAM7F,UAAU,qBAAqBoF,GAAG,eAAxC,+LACA,wBAAQpF,UAAU,gEACV2B,KAAK,SADb,0EC8BDsE,EA3DOvF,IAAMgE,MAAK,YAAqC,IAAnCC,EAAkC,EAAlCA,OAAQhC,EAA0B,EAA1BA,QAASR,EAAiB,EAAjBA,WAAiB,EAC3B0C,mBAAS,IADkB,mBACtDqB,EADsD,KAC3CC,EAD2C,OAErCtB,mBAAS,IAF4B,mBAEtDnD,EAFsD,KAEhD0E,EAFgD,KAI7DnB,qBAAU,WACNkB,EAAa,IACbC,EAAQ,MACT,CAACzD,IAmBJ,OACI,eAAC,EAAD,CAAef,KAAM,OACN0C,MAAO,gEACP5B,SAAUiC,EACVhC,QAASA,EACT6B,SAtBE,SAACU,GAClBA,EAAEC,iBACFhD,EAAW,CACPP,KAAMsE,EACNxE,UAcJ,UAMI,uBAAO1B,UAAU,eACV4B,KAAK,OACLwD,GAAG,QACHI,UAAQ,EAAC7D,KAAK,OACd2D,UAAU,IACVD,UAAU,KACVE,YAAY,mDACZE,MAAOS,EACPR,SAxBc,SAACR,GAC1BiB,EAAajB,EAAErC,OAAO4C,UAyBlB,sBAAML,GAAG,cAAcpF,UAAU,qBAAjC,+LACA,uBAAOA,UAAU,eACV4B,KAAK,OACLwD,GAAG,OACHI,UAAQ,EAAC7D,KAAK,MACd4D,YAAY,qGACZE,MAAO/D,EACPgE,SA7BU,SAACR,GACtBkB,EAAQlB,EAAErC,OAAO4C,UA8Bb,sBAAML,GAAG,aAAapF,UAAU,qBAAhC,+LACA,wBAAQA,UAAU,uCAAuC2B,KAAK,SAA9D,8D,gBC1CD0E,EAVQ,SAAC,GAAsC,IAA1BC,EAAyB,EAApCC,UAAyBxG,EAAW,6BACzD,OACI,cAAC,IAAD,UACK,kBACGA,EAAMyG,SAAW,cAACF,EAAD,eAAevG,IAAY,cAAC,IAAD,CAAUM,GAAG,iBCO1DoG,EAbF,SAAC,GAA0C,IAAzC7E,EAAwC,EAAxCA,KAAM0C,EAAkC,EAAlCA,MAAOoC,EAA2B,EAA3BA,OAAQnC,EAAmB,EAAnBA,SAAUoC,EAAS,EAATA,IAE1C,OACI,sBAAK3G,UAAU,OAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BsE,IAC7B,sBAAMtE,UAAS,gDAA2C4B,GAAQA,KAAI,UAAKA,EAAL,SAAkB4C,SAAUkC,EAAlG,SACKnC,IAEJoC,MCkDEC,EAPF,IApDT,WAAY3D,GAAU,IAAD,gCAKrB4D,OAAS,SAAC9C,GACN,OAAOH,MAAM,GAAD,OAAI,EAAKF,QAAT,WAA2B,CACnCG,OAAQ,OACRF,QAAS,EAAKA,QACdK,KAAMC,KAAKC,UAAU,CACjB4C,SAAU/C,EAAK+C,SACfxG,MAAOyD,EAAKzD,UAGfwD,KAAK,EAAKZ,gBACVY,MAAK,SAAAC,GACF,GAAIA,EAAKgD,MAEL,OADAC,aAAaC,QAAQ,MAAOlD,EAAKgD,OAC1BhD,MAlBF,KAuBrBmD,WAAa,SAACnD,GACV,OAAOH,MAAM,GAAD,OAAI,EAAKF,QAAT,aAA6B,CACrCG,OAAQ,MACRF,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BI,EAAKoD,QAInCrD,KAAK,EAAKZ,iBAjCE,KAoCrBkE,OAAS,SAACrD,GACN,OAAOH,MAAM,GAAD,OAAI,EAAKF,QAAT,WAA2B,CACnCG,OAAQ,OACRF,QAAS,EAAKA,QACdK,KAAMC,KAAKC,UAAU,CACjB4C,SAAU/C,EAAK+C,SACfxG,MAAOyD,EAAKzD,UAGfwD,KAAK,EAAKZ,iBA7CE,KAiDrBA,eAAiB,SAACC,GAAD,OAASA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAR,gDAA0BJ,EAAIK,UAhD1EC,KAAKC,QAAUT,EAAQS,QACvBD,KAAKE,QAAUV,EAAQU,QAkDlB,CAAS,CAClBD,QAAS,gCACTC,QAAS,CACL,eAAgB,sBCmBT0D,EArEE,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,mBACTC,EAAUC,cADuB,EAEb3C,mBAAS,IAFI,mBAEhCvE,EAFgC,KAEzBmH,EAFyB,OAGP5C,mBAAS,IAHF,mBAGhCiC,EAHgC,KAGtBY,EAHsB,KAKvCzC,qBAAU,WACNwC,EAAS,IACTC,EAAY,MACb,IAuBH,OACI,eAAC,EAAD,CACI9F,KAAM,UACN0C,MAAO,qEACPoC,OAjBa,SAACxB,GAClBA,EAAEC,iBACFyB,EAAKQ,OAAO,CAAC9G,MAAOA,EAAOwG,SAAUA,IAChChD,MAAK,SAAA6D,GACEL,GAAmB,GACnBC,EAAQK,KAAK,eAGpBC,OAAM,WACHP,GAAmB,OAK3B,UAKI,uBAAOtH,UAAU,kCACVoF,GAAG,QACHC,UAAU,KACVC,UAAU,IACV1D,KAAK,QACL2D,YAAY,QACZC,UAAQ,EAAC7D,KAAK,QACd8D,MAAOnF,EACPoF,SAnCW,SAACR,GACvBuC,EAASvC,EAAErC,OAAO4C,UAoCd,sBAAML,GAAG,cAAcpF,UAAU,qBAAjC,+LACA,uBAAOA,UAAU,kCACVoF,GAAG,WACHC,UAAU,KACVC,UAAU,IACV1D,KAAK,WACL2D,YAAY,uCACZC,UAAQ,EAAC7D,KAAK,WACd8D,MAAOqB,EACPpB,SA1Cc,SAACR,GAC1BwC,EAAYxC,EAAErC,OAAO4C,UA2CjB,sBAAML,GAAG,iBAAiBpF,UAAU,qBAApC,+LACA,wBAAQA,UAAU,8DAA8D2B,KAAK,SAArF,0HAGA,cAAC,IAAD,CAAM3B,UAAW,4BAA6BK,GAAG,WAAjD,qKCIGyH,EAnED,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACNR,EAAUC,cADa,EAEH3C,mBAAS,IAFN,mBAEtBvE,EAFsB,KAEfmH,EAFe,OAGG5C,mBAAS,IAHZ,mBAGtBiC,EAHsB,KAGZY,EAHY,KAK7BzC,qBAAU,WACNwC,EAAS,IACTC,EAAY,MACb,IAuBH,OACI,eAAC,EAAD,CAAM9F,KAAM,UACN0C,MAAO,2BACPoC,OAhBW,SAACxB,GAClBA,EAAEC,iBACFyB,EAAKC,OAAO,CAACvG,MAAOA,EAAOwG,SAAUA,IAChChD,MAAK,SAAAC,GACEA,EAAKgD,QACLU,EAAS,IACTC,EAAY,IACZK,IACAR,EAAQK,KAAK,UAMzB,UAII,uBAAO5H,UAAU,kCACVoF,GAAG,OACHC,UAAU,KACVC,UAAU,IACV1D,KAAK,QACL2D,YAAY,QACZC,UAAQ,EAAC7D,KAAK,QACd8D,MAAOnF,EACPoF,SAlCW,SAACR,GACvBuC,EAASvC,EAAErC,OAAO4C,UAmCd,sBAAML,GAAG,cAAcpF,UAAU,qBAAjC,+LACA,uBAAOA,UAAU,kCACVqF,UAAU,KACVC,UAAU,IACV1D,KAAK,WACL2D,YAAY,uCACZC,UAAQ,EAAC7D,KAAK,WACd8D,MAAOqB,EACPpB,SAxCc,SAACR,GAC1BwC,EAAYxC,EAAErC,OAAO4C,UAyCjB,sBAAML,GAAG,iBAAiBpF,UAAU,qBAApC,+LACA,wBAAQA,UAAU,8DAA8D2B,KAAK,SAArF,gDC1CGqG,EAlBe,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,QAASxF,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QAE1D,OACI,qBAAK3C,UAAS,wCAAmC0C,GAAY,gBAAkBnC,QAAS,SAAAqC,IAChFA,EAAMC,OAAOC,UAAUC,SAAS,UAC7BH,EAAMC,OAAOC,UAAUC,SAAS,kBACnCJ,EAAQC,IAHhB,SAMI,sBAAK5C,UAAU,6CAAf,UACI,qBAAKA,UAAS,wBAAmBiI,EAAY,wBAA0B,2BACvE,oBAAIjI,UAAU,iBAAd,SAAgCkI,IAChC,wBAAQlI,UAAU,eAAe2B,KAAK,iBCcvCwG,EAzBmBzH,IAAMgE,MAAK,YAAmC,IAAjCuD,EAAgC,EAAhCA,UAAWtD,EAAqB,EAArBA,OAAQhC,EAAa,EAAbA,QAAa,EACzCkC,mBAAS,IADgC,mBAChEqD,EADgE,KACvDE,EADuD,KAGvEnD,qBAAU,WACNqC,MACD,CAACW,IAEJ,IAAMX,EAAqB,WACXc,EAAZH,EACI,uKAEA,uMAIR,OACI,cAAC,EAAD,CAAuBA,UAAWA,EACXvF,SAAUiC,EACVhC,QAASA,EACTuF,QAASA,OCmO7BG,EAvOH,WAAO,IAAD,EACgDxD,oBAAS,GADzD,mBACPyD,EADO,KACkBC,EADlB,OAE8C1D,oBAAS,GAFvD,mBAEP2D,EAFO,KAEiBC,EAFjB,OAGwC5D,oBAAS,GAHjD,mBAGP6D,EAHO,KAGcC,EAHd,OAI4C9D,oBAAS,GAJrD,mBAIP+D,EAJO,KAIgBC,EAJhB,OAK0BhE,oBAAS,GALnC,mBAKPiE,EALO,KAKOC,EALP,OAM0BlE,oBAAS,GANnC,mBAMPmE,EANO,KAMOC,EANP,OAO0BpE,oBAAS,GAPnC,mBAOPqE,EAPO,KAOOC,EAPP,OAQwBtE,mBAAS,IARjC,mBAQP5D,EARO,KAQMmI,EARN,OASYvE,mBAAS,IATrB,mBASPzC,EATO,KASAiH,GATA,QAUkBxE,oBAAS,GAV3B,qBAUP2B,GAVO,MAUG8C,GAVH,SAWoBzE,mBAAS,IAX7B,qBAWP0E,GAXO,MAWIC,GAXJ,SAYoC3E,mBAAS,IAZ7C,qBAYP4E,GAZO,MAYYC,GAZZ,MAaRnC,GAAUC,cAEhBvC,qBAAU,WACNjC,EAAI2G,cACC7F,MAAK,SAAAC,GACFqF,EAAerF,MAElB8D,OAAM,SAAC+B,GACJC,QAAQC,IAAIF,MAGpB5G,EAAI+G,kBACCjG,MAAK,SAAAC,GACFsF,GAAStF,MAEZ8D,OAAM,SAAC+B,GACJC,QAAQC,IAAIF,MAGpBI,OAED,IAEH/E,qBAAU,WACN,IAAMgF,EAAmB,SAACrH,GACJ,WAAdA,EAAMsH,KACNC,MAeR,OAVI3B,GACAE,GACAE,GACAI,GACAF,GACAR,IAEA8B,SAASC,iBAAiB,UAAWJ,GAGlC,WACHG,SAASE,oBAAoB,UAAWL,MAG7C,CAACzB,EAAwBE,EAAqBE,EAAuBI,IAGxE,IAAMgB,GAAa,WACf,IAAM7C,EAAMH,aAAauD,QAAQ,OAC7BpD,EACAP,EAAKM,WAAW,CAACC,IAAKA,IACjBrD,MAAK,SAAAX,GACEA,IACAmG,IAAY,GACZE,GAAarG,EAAIY,KAAKzD,OACtBiH,GAAQK,KAAK,SAGpBC,OAAM,SAAC+B,GACJN,IAAY,GACZO,QAAQC,IAAIF,MAGpBN,IAAY,IAmEda,GAAiB,WACnB1B,GAA0B,GAC1BE,GAAuB,GACvBE,GAAyB,GACzBM,GAAgB,GAChBJ,GAAgB,GAChBR,GAA2B,IA6B/B,OAEI,cAAC9H,EAAmB+J,SAApB,CAA6B/E,MAAOxE,EAApC,SACI,sBAAKjB,UAAU,OAAf,UACI,cAAC,EAAD,CAAQG,KAAMA,EAAMG,MAAOiJ,GAAW/I,OAR5B,WAClBwG,aAAayD,WAQL,eAAC,IAAD,WACI,cAAC,IAAD,CAAOrK,KAAM,WAAb,SACI,cAAC,EAAD,CAAO2H,YAnBP,WAChBiC,UAoBY,cAAC,IAAD,CAAO5J,KAAM,WAAb,SACI,cAAC,EAAD,CAAUkH,mBA3GM,SAACW,GACjCyB,GAAqBzB,GACrBM,GAA2B,QA2Gf,cAAC,EAAD,CACInI,KAAK,IACLoG,SAAUA,GACVrE,WAvBQ,WACxBwG,GAAuB,IAuBP5G,aApCU,WAC1B8G,GAAyB,IAoCTtG,aA3CI,SAAC1B,GACrBoI,EAAgBpI,GAChBsI,GAAgB,IA0CAjH,cAlCW,WAC3BuG,GAA0B,IAkCVrG,MAAOA,EACPI,YAnGG,SAAC3B,GACpB,IAAMS,EAAUT,EAAKU,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,MAAQJ,EAAYI,OAE3D2B,EAAI0H,qBAAqB7J,EAAKQ,KAAMC,GAASwC,MAAK,SAAC6G,GAC3CtB,GAASjH,EAAMC,KAAI,SAACuI,GAAD,OAAOA,EAAEvJ,MAAQR,EAAKQ,IAAMsJ,EAAUC,SAE/D/C,OAAM,SAAC+B,GACLC,QAAQC,IAAIF,OA6FA7I,aAzFK,SAACF,GACtBmC,EAAI6H,WAAWhK,GAAMiD,MAAK,kBACtBuF,GAASjH,EAAM0I,QAAO,SAAArJ,GAAC,OAAIA,EAAEJ,MAAQR,EAAKQ,WAC5CwG,OAAM,SAAC+B,GACLC,QAAQC,IAAIF,OAsFArD,UAAWzE,OAInB,cAAC,EAAD,CACImG,UAAWwB,GACX9E,OAAQ2D,EACR3F,QAASwH,KAEb,cAAC,EAAD,CAAYtJ,KAAMmI,EACNtG,SAAUwG,EACVvG,QAASwH,KAErB,cAAC,EAAD,CAAkBxF,OAAQ6D,EACR7F,QAASwH,GACTvF,aAjIL,SAACb,GACtBf,EAAI+H,YAAYhH,GACXD,MAAK,SAAAC,GACFqF,EAAerF,MAElB8D,OAAM,SAAC+B,GACJC,QAAQC,IAAIF,MAEfoB,QACGb,OA0HA,cAAC,EAAD,CAAiBxF,OAAQiE,EACRjG,QAASwH,GACTvE,eArGF,SAAC7B,GACxBf,EAAIiI,UAAUlH,EAAK/B,QACd8B,MAAK,SAAAC,GACEqF,EAAerF,MAErB8D,OAAM,SAAC+B,GACTC,QAAQC,IAAIF,MAEXoB,QACGb,OA8FA,cAAC,EAAD,CAAexF,OAAQ+D,EACR/F,QAASwH,GACThI,WA5FJ,SAAC4B,GACpBf,EAAIkI,mBAAmBnH,GAClBD,MAAK,SAACC,GACHsF,GAAS,CAACtF,GAAF,mBAAW3B,QACpByF,OAAM,SAAC+B,GACVC,QAAQC,IAAIF,MAEXoB,QACGb,aClJDgB,EAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,6BAAqBvH,MAAK,YAAgD,IAA9CwH,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QACxDJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCApBO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,EAAD,QAGRzB,SAAS0B,eAAe,SAM5BX,M","file":"static/js/main.5a2aeb25.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link, Route, Switch} from \"react-router-dom\";\n\nconst Header = (props) => {\n\n    return (\n        <header className=\"header\">\n            <img alt=\"Логотип Место\" className=\"header__logo\" src={props.logo}/>\n            <Switch>\n                <Route path=\"/sign-up\">\n                    <div className={\"header__inner-block\"}>\n                        <Link className=\"header__link\" to=\"/sign-in\">Войти</Link>\n                    </div>\n                </Route>\n                <Route path=\"/sign-in\">\n                    <div className={\"header__inner-block\"}>\n                        <Link className={\"header__link\"} to=\"/sign-up\">Зарегистрироваться</Link>\n                    </div>\n                </Route>\n                <Route path=\"/\">\n                    <div className={\"header__inner-block\"}>\n                        <p className=\"margin_0\">{props.email}</p>\n                        <Link className={\"header__link\"} to=\"/sign-in\" onClick={props.onExit}>Выйти</Link>\n                    </div>\n                </Route>\n            </Switch>\n        </header>\n    );\n}\n\n\nexport default Header","import React from \"react\";\n\nexport const CurrentUserContext = React.createContext({});","import React, {useContext} from \"react\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nconst Card = ({card, onCardClick, onCardDelete, onCardLike}) => {\n\n    const currentUser = useContext(CurrentUserContext)\n    const isOwn = card.owner._id === currentUser._id;\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    const cardLikedClass = 'content_liked'\n\n    const handleClick = () => {\n        onCardClick(card)\n    }\n\n    const handleDelete = () => {\n        onCardDelete(card)\n    };\n\n    const handleLikeClick = () => {\n        onCardLike(card)\n    }\n\n    return (\n        <>\n            <li className=\"content__list-item\">\n                <img alt=\"Изображение места\" className=\"content__item-image\" src={card.link} onClick={handleClick}/>\n                {\n                    isOwn &&\n                    <button className=\"content__remove-button\" type=\"button\" onClick={handleDelete}/>\n                }\n                <div className=\"content__item-description\">\n                    <h2 className=\"content__item-title\">{card.name}</h2>\n                    <div className=\"content__like\">\n                        <button className={`content__like-button ${isLiked && cardLikedClass}`} type=\"button\"\n                                onClick={handleLikeClick}/>\n                        <p className=\"content__like-count\">{card.likes.length}</p>\n                    </div>\n                </div>\n            </li>\n        </>\n\n    )\n}\n\nexport default Card","import React, {useContext} from \"react\";\nimport Card from \"./Card\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nconst Main = (props) => {\n    const currentUser = useContext(CurrentUserContext);\n\n    return (\n        <main>\n            <section className=\"profile\">\n                <div className=\"profile__info\">\n                    <div className=\"profile__avatar-container\" onClick={props.onEditAvatar}>\n                        <img alt=\"Аватар\" className=\"profile__avatar\" src={currentUser.avatar}/>\n                        <span className=\"profile__avatar-hover\"/>\n                    </div>\n                    <div className=\"profile__description\">\n                        <div className=\"profile__title\">\n                            <h1 className=\"profile__title-text\">{currentUser.name}</h1>\n                            <p className=\"profile__specialisation\">{currentUser.about}</p>\n                        </div>\n                        <button className=\"profile__setting\" type=\"button\" onClick={props.onEditProfile}/>\n                    </div>\n                </div>\n                <button className=\"add-content\" type=\"button\" onClick={props.onAddPlace}/>\n            </section>\n            <section className=\"content\">\n                <ul className=\"content__list\">\n                    {props.cards.length > 0 &&\n                    props.cards.map(item => (\n                            <Card key={item._id}\n                                  card={item}\n                                  onCardClick={props.onSelectCard}\n                                  onCardDelete={props.onCardDelete}\n                                  onCardLike={props.onLikeClick}\n                            />\n                        )\n                    )\n                    }\n                </ul>\n            </section>\n        </main>\n    );\n}\n\nexport default Main","export default __webpack_public_path__ + \"static/media/logo.fb123762.svg\";","import React from \"react\";\n\nconst ImagePopup = ({card, isOpened, onClose}) => {\n\n    return (\n        <div className={`popup popup_dark ${isOpened ? 'popup_opened' : ''}`} onClick={event => {\n            if (event.target.classList.contains('popup')\n                || event.target.classList.contains('popup__close')) {\n                onClose()\n            }\n        }}>\n            <div className=\"popup__image-content\">\n                <img alt=\"Изображение\" className=\"popup__image\" src={card.link}/>\n                <h2 className=\"popup__title-image\">{card.name}</h2>\n                <button className=\"popup__close\" type=\"button\"/>\n            </div>\n        </div>\n    );\n}\n\nexport default ImagePopup","class Api {\n    constructor(options) {\n        this.baseUrl = options.baseUrl;\n        this.headers = options.headers;\n    }\n\n    getInitialCards() {\n        return fetch(`${this.baseUrl}/cards`, {\n            method: 'GET',\n            headers: this.headers\n        })\n            .then(this._checkResponse)\n    }\n\n    createSomeOneCards(data) {\n        return fetch(`${this.baseUrl}/cards`, {\n            method: 'POST',\n            headers: this.headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n            .then(this._checkResponse)\n    }\n\n    getUserInfo() {\n        return fetch(`${this.baseUrl}/users/me`, {\n            method: 'GET',\n            headers: this.headers\n        })\n            .then(this._checkResponse)\n    }\n\n    setUserInfo(data) {\n        return fetch(`${this.baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this.headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n            })\n        })\n            .then(this._checkResponse)\n    }\n\n    deleteCard(card) {\n        return fetch(`${this.baseUrl}/cards/${card._id}`, {\n            method: 'DELETE',\n            headers: this.headers\n        })\n            .then(this._checkResponse)\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        return isLiked ?\n            fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n                method: 'PUT',\n                headers: this.headers\n            })\n                .then(this._checkResponse)\n\n            : fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n                method: 'DELETE',\n                headers: this.headers\n            })\n                .then(this._checkResponse)\n    }\n\n    unlikeCard(cardId) {\n        return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: this.headers\n        })\n            .then(this._checkResponse)\n    }\n\n    setAvatar(link) {\n        return fetch(`${this.baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this.headers,\n            body: JSON.stringify({\n                avatar: link\n            })\n        })\n            .then(this._checkResponse)\n    }\n\n    _checkResponse = (res) => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-19',\n    headers: {\n        authorization: '4b572fb9-4ad5-4a1b-9e4b-14bc91bf7314',\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api;","import React from \"react\";\n\nconst PopupWithForm = ({name, title, isOpened, children, onClose, onSubmit}) => {\n\n    return (\n        <div className={`popup popup_type_${name} ${isOpened && 'popup_opened'}`} onClick={event => {\n            if (event.target.classList.contains('popup')\n                || event.target.classList.contains('popup__close')) {\n                onClose(event)\n            }\n        }}>\n            <div className=\"popup__content\">\n                <h2 className=\"popup__title\">{title}</h2>\n                <form className=\"popup__edit-form card-form\" name={`${name}-form`} onSubmit={onSubmit}>\n                    {children}\n                </form>\n                <button className=\"popup__close\" type=\"button\"/>\n            </div>\n        </div>\n    );\n}\n\nexport default PopupWithForm\n","import PopupWithForm from \"./PopupWithForm\";\nimport React, {useContext, useEffect, useState} from \"react\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nconst EditProfilePopup = React.memo(({isOpen, onClose, onUpdateUser}) => {\n        const currentUser = useContext(CurrentUserContext);\n        const [name, setName] = useState('')\n        const [description, setDescription] = useState('')\n\n        useEffect(() => {\n            setName(currentUser.name || '');\n            setDescription(currentUser.about || '');\n        }, [currentUser]);\n\n        const handleSubmit = (e) => {\n            e.preventDefault();\n            onUpdateUser({\n                name,\n                about: description,\n            });\n        }\n\n        const handleChangeName = (e) => setName(e.target.value);\n\n        const handleChangeDescription = (e) => setDescription(e.target.value);\n\n        return (\n            <PopupWithForm name={'profile'}\n                           title={'Редактировать профиль'}\n                           isOpened={isOpen}\n                           onClose={onClose}\n                           onSubmit={handleSubmit}\n            >\n                <input className=\"popup__input\"\n                       id=\"name\"\n                       maxLength=\"40\"\n                       minLength=\"2\"\n                       name=\"name\"\n                       placeholder=\"Имя\"\n                       required type=\"text\"\n                       value={name}\n                       onChange={handleChangeName}\n                />\n                <span id=\"name-error\" className=\"popup__input-error\">Необходимо заполнить данное поле</span>\n                <input className=\"popup__input\"\n                       id=\"desc\"\n                       maxLength=\"200\"\n                       minLength=\"2\"\n                       name=\"desc\"\n                       placeholder=\"Вид деятельности\"\n                       required type=\"text\"\n                       value={description}\n                       onChange={handleChangeDescription}\n                />\n                <span id=\"desc-error\" className=\"popup__input-error\">Необходимо заполнить данное поле</span>\n                <button className=\"popup__save-button profile-button\" type=\"submit\">Сохранить\n                </button>\n            </PopupWithForm>\n        )\n    }\n)\n\nexport default EditProfilePopup","import PopupWithForm from \"./PopupWithForm\";\nimport React, {useEffect, useRef} from \"react\";\n\nconst EditAvatarPopup = React.memo(({isOpen, onClose, onUpdateAvatar}) => {\n        const avatarRef = useRef()\n\n        useEffect(() => {\n            avatarRef.current.value = ''\n        });\n\n        const handleSubmit = (e) => {\n            e.preventDefault();\n            onUpdateAvatar({\n                avatar: avatarRef.current.value\n            });\n        }\n\n        return (\n            <PopupWithForm name={'avatar'}\n                           title={'Обновить аватар'}\n                           isOpened={isOpen}\n                           onClose={onClose}\n                           onSubmit={handleSubmit}\n            >\n                <input className=\"popup__input\"\n                       id=\"a-link\"\n                       name=\"link\"\n                       placeholder=\"Ссылка на картинку\"\n                       required type=\"url\"\n                       ref={avatarRef}\n                />\n                <span className=\"popup__input-error\" id=\"a-link-error\">Необходимо заполнить данное поле</span>\n                <button className=\"popup__save-button popup__save-button_nonmargin avatar-button\"\n                        type=\"submit\">Сохранить\n                </button>\n            </PopupWithForm>\n        )\n    }\n)\n\nexport default EditAvatarPopup","import PopupWithForm from \"./PopupWithForm\";\nimport React, {useEffect, useState} from \"react\";\n\nconst AddPlacePopup = React.memo(({isOpen, onClose, onAddPlace,}) => {\n        const [placeName, setPlaceName] = useState('')\n        const [link, setLink] = useState('')\n\n        useEffect(() => {\n            setPlaceName('')\n            setLink('')\n        }, [onClose])\n\n        const handleSubmit = (e) => {\n            e.preventDefault()\n            onAddPlace({\n                name: placeName,\n                link\n            })\n        };\n\n        const handleChangeCardName = (e) => {\n            setPlaceName(e.target.value)\n        }\n\n        const handleChangeLink = (e) => {\n            setLink(e.target.value)\n        };\n\n\n        return (\n            <PopupWithForm name={'card'}\n                           title={'Новое место'}\n                           isOpened={isOpen}\n                           onClose={onClose}\n                           onSubmit={handleSubmit}\n            >\n                <input className=\"popup__input\"\n                       name=\"name\"\n                       id=\"title\"\n                       required type=\"text\"\n                       minLength=\"2\"\n                       maxLength=\"30\"\n                       placeholder=\"Название\"\n                       value={placeName}\n                       onChange={handleChangeCardName}\n                />\n                <span id=\"title-error\" className=\"popup__input-error\">Необходимо заполнить данное поле</span>\n                <input className=\"popup__input\"\n                       name=\"link\"\n                       id=\"link\"\n                       required type=\"url\"\n                       placeholder=\"Ссылка на картинку\"\n                       value={link}\n                       onChange={handleChangeLink}\n                />\n                <span id=\"link-error\" className=\"popup__input-error\">Необходимо заполнить данное поле</span>\n                <button className=\"popup__save-button card-popup-button\" type=\"submit\">Создать</button>\n            </PopupWithForm>\n        )\n    }\n)\n\nexport default AddPlacePopup","import React from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\n\n\nconst ProtectedRoute = ({component: Component, ...props}) => {\n    return (\n        <Route>\n            {() =>\n                props.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\"/>\n            }\n        </Route>\n    );\n};\n\nexport default ProtectedRoute;","import React from \"react\";\n\nconst Sign = ({name, title, onSend, children, nav}) => {\n\n    return (\n        <div className=\"sign\">\n            <h2 className=\"sign__title\">{title}</h2>\n            <form className={`popup__edit-form margin__top_45 sign__${name}`} name={`${name}-form`} onSubmit={onSend}>\n                {children}\n            </form>\n            {nav}\n        </div>\n    );\n}\n\nexport default Sign","class Auth {\n    constructor(options) {\n        this.baseUrl = options.baseUrl;\n        this.headers = options.headers;\n    }\n\n    signIn = (data) => {\n        return fetch(`${this.baseUrl}/signin`, {\n            method: 'POST',\n            headers: this.headers,\n            body: JSON.stringify({\n                password: data.password,\n                email: data.email\n            })\n        })\n            .then(this._checkResponse)\n            .then(data => {\n                if (data.token) {\n                    localStorage.setItem('jwt', data.token);\n                    return data\n                }\n            })\n    }\n\n    getContent = (data) => {\n        return fetch(`${this.baseUrl}/users/me`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${data.jwt}`\n\n            },\n        })\n            .then(this._checkResponse)\n    }\n\n    signUp = (data) => {\n        return fetch(`${this.baseUrl}/signup`, {\n            method: 'POST',\n            headers: this.headers,\n            body: JSON.stringify({\n                password: data.password,\n                email: data.email\n            })\n        })\n            .then(this._checkResponse)\n    }\n\n\n    _checkResponse = (res) => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)\n}\n\nconst auth = new Auth({\n    baseUrl: 'https://auth.nomoreparties.co',\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default auth;","import {Link, useHistory} from \"react-router-dom\";\nimport Sign from \"./Sign\";\nimport auth from \"../utils/auth\";\nimport React, {useEffect, useState} from \"react\";\n\n\nconst Register = ({handleNotification}) => {\n    const history = useHistory()\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    useEffect(() => {\n        setEmail('')\n        setPassword('')\n    }, [])\n\n    const handleChangeEmail = (e) => {\n        setEmail(e.target.value)\n    }\n\n    const handleChangePassword = (e) => {\n        setPassword(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        auth.signUp({email: email, password: password})\n            .then(r => {\n                    handleNotification(true)\n                    history.push('/sign-in')\n                }\n            )\n            .catch(() => {\n                handleNotification(false)\n            })\n    }\n\n    return (\n        <Sign\n            name={\"sign-up\"}\n            title={\"Регистрация\"}\n            onSend={handleSubmit}\n        >\n            <input className=\"popup__input popup__input_white\"\n                   id=\"email\"\n                   maxLength=\"40\"\n                   minLength=\"2\"\n                   name=\"email\"\n                   placeholder=\"Email\"\n                   required type=\"email\"\n                   value={email}\n                   onChange={handleChangeEmail}\n            />\n            <span id=\"email-error\" className=\"popup__input-error\">Необходимо заполнить данное поле</span>\n            <input className=\"popup__input popup__input_white\"\n                   id=\"password\"\n                   maxLength=\"15\"\n                   minLength=\"6\"\n                   name=\"password\"\n                   placeholder=\"Пароль\"\n                   required type=\"password\"\n                   value={password}\n                   onChange={handleChangePassword}\n            />\n            <span id=\"password-error\" className=\"popup__input-error\">Необходимо заполнить данное поле</span>\n            <button className=\"popup__save-button popup__save-button_white margin__top_170\" type=\"submit\">\n                Зарегистрироваться\n            </button>\n            <Link className={\"sign__link margin__top_15\"} to=\"/sign-in\">\n                Уже зарегистрированы? Войти\n            </Link>\n        </Sign>\n    )\n}\n\nexport default Register","import Sign from \"./Sign\";\nimport React, {useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport auth from \"../utils/auth\";\n\nconst Login = ({handleLogin}) => {\n    const history = useHistory()\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    useEffect(() => {\n        setEmail('')\n        setPassword('')\n    }, [])\n\n    const handleChangeEmail = (e) => {\n        setEmail(e.target.value)\n    }\n\n    const handleChangePassword = (e) => {\n        setPassword(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        auth.signIn({email: email, password: password})\n            .then(data => {\n                if (data.token) {\n                    setEmail('')\n                    setPassword('')\n                    handleLogin()\n                    history.push(\"/\")\n                }\n            })\n    }\n\n    return (\n        <Sign name={\"sign-in\"}\n              title={\"Вход\"}\n              onSend={handleSubmit}\n        >\n            <input className=\"popup__input popup__input_white\"\n                   id=\"name\"\n                   maxLength=\"40\"\n                   minLength=\"2\"\n                   name=\"email\"\n                   placeholder=\"Email\"\n                   required type=\"email\"\n                   value={email}\n                   onChange={handleChangeEmail}\n            />\n            <span id=\"email-error\" className=\"popup__input-error\">Необходимо заполнить данное поле</span>\n            <input className=\"popup__input popup__input_white\"\n                   maxLength=\"15\"\n                   minLength=\"6\"\n                   name=\"password\"\n                   placeholder=\"Пароль\"\n                   required type=\"password\"\n                   value={password}\n                   onChange={handleChangePassword}\n            />\n            <span id=\"password-error\" className=\"popup__input-error\">Необходимо заполнить данное поле</span>\n            <button className=\"popup__save-button popup__save-button_white margin__top_170\" type=\"submit\">\n                Войти\n            </button>\n            {/*<Link className={\"sign__link margin__top_15\"} to=\"/sign-up\">*/}\n            {/*    Уже зарегистрированы? Войти*/}\n            {/*</Link>*/}\n        </Sign>\n    )\n}\n\nexport default Login","import React from \"react\";\n\nconst PopupWithNotification = ({isSuccess, message, isOpened, onClose}) => {\n\n    return (\n        <div className={`popup popup_type_notification ${isOpened && 'popup_opened'}`} onClick={event => {\n            if (event.target.classList.contains('popup')\n                || event.target.classList.contains('popup__close')) {\n                onClose(event)\n            }\n        }}>\n            <div className=\"popup__content popup__content_notification\">\n                <div className={`popup__status ${isSuccess ? 'popup__status_success' : 'popup__status_failure'}`}/>\n                <h2 className=\"popup__message\">{message}</h2>\n                <button className=\"popup__close\" type=\"button\"/>\n            </div>\n        </div>\n    );\n}\n\nexport default PopupWithNotification\n","import React, {useEffect, useState} from \"react\";\nimport PopupWithNotification from \"./PopupWithNotification\";\n\nconst RegisterNotificationPopup = React.memo(({isSuccess, isOpen, onClose}) => {\n        const [message, setMessage] = useState('')\n\n        useEffect(() => {\n            handleNotification()\n        }, [isSuccess])\n\n        const handleNotification = () => {\n            isSuccess ? setMessage(\n                'Вы успешно зарегистрировались'\n            ) : setMessage(\n                'Что-то пошло не так! Попробуйте еще раз'\n            )\n        }\n\n        return (\n            <PopupWithNotification isSuccess={isSuccess}\n                                   isOpened={isOpen}\n                                   onClose={onClose}\n                                   message={message}\n            />\n        )\n    }\n)\n\nexport default RegisterNotificationPopup\n","import React, {useEffect, useState} from \"react\";\nimport '../index.css';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport logo from './../images/logo.svg'\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport {Route, Switch, useHistory} from 'react-router-dom';\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport auth from \"../utils/auth\";\nimport RegisterNotificationPopup from \"./RegisterNotificationPopup\";\n\nconst App = () => {\n    const [isNotificationPopupOpen, setIsNotificationPopupOpen] = useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [isDeleteCard, setIsDeleteCard] = useState(false);\n    const [selectedCard, setSelectedCard] = useState(false);\n    const [isOpenedCard, setIsOpenedCard] = useState(false); // чтобы картинка не исчезала при плавном закрытии модальника\n    const [currentUser, setCurrentUser] = useState({});\n    const [cards, setCards] = useState([]);\n    const [loggedIn, setLoggedIn] = useState(true);\n    const [userEmail, setUserEmail] = useState('')\n    const [isSuccessRegister, setIsSuccessRegister] = useState({})\n    const history = useHistory();\n\n    useEffect(() => {\n        api.getUserInfo()\n            .then(data => {\n                setCurrentUser(data)\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n\n        api.getInitialCards()\n            .then(data => {\n                setCards(data)\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n\n        tokenCheck()\n\n    }, [])\n\n    useEffect(() => {\n        const handleClosePopup = (event) => {\n            if (event.key === 'Escape') {\n                closeAllPopups()\n            }\n        }\n\n        if (\n            isEditProfilePopupOpen ||\n            isAddPlacePopupOpen ||\n            isEditAvatarPopupOpen ||\n            selectedCard ||\n            isDeleteCard ||\n            isNotificationPopupOpen\n        ) {\n            document.addEventListener('keydown', handleClosePopup);\n        }\n\n        return () => {\n            document.removeEventListener('keydown', handleClosePopup);\n        }\n\n    }, [isEditProfilePopupOpen, isAddPlacePopupOpen, isEditAvatarPopupOpen, selectedCard]);\n\n\n    const tokenCheck = () => {\n        const jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            auth.getContent({jwt: jwt})\n                .then(res => {\n                    if (res) {\n                        setLoggedIn(true)\n                        setUserEmail(res.data.email)\n                        history.push('/')\n                    }\n                })\n                .catch((err) => {\n                    setLoggedIn(false)\n                    console.log(err);\n                });\n        } else {\n            setLoggedIn(false)\n        }\n\n    }\n\n    const handleOpenNotificationPopup = (isSuccess) => {\n        setIsSuccessRegister(isSuccess)\n        setIsNotificationPopupOpen(true)\n    }\n\n    const handleUpdateUser = (data) => {\n        api.setUserInfo(data)\n            .then(data => {\n                setCurrentUser(data)\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            .finally(\n                closeAllPopups\n            );\n    }\n\n    const handleCardLike = (card) => {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n                setCards(cards.map((c) => c._id === card._id ? newCard : c));\n            }\n        ).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    const handleCardDelete = (card) => {\n        api.deleteCard(card).then(() =>\n            setCards(cards.filter(i => i._id !== card._id))\n        ).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    const handleUpdateAvatar = (data) => {\n        api.setAvatar(data.avatar)\n            .then(data => {\n                    setCurrentUser(data)\n                }\n            ).catch((err) => {\n            console.log(err);\n        })\n            .finally(\n                closeAllPopups\n            );\n    }\n\n    const handleAddPlace = (data) => {\n        api.createSomeOneCards(data)\n            .then((data) => {\n                setCards([data, ...cards])\n            }).catch((err) => {\n            console.log(err);\n        })\n            .finally(\n                closeAllPopups\n            );\n    }\n\n    const closeAllPopups = () => {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false)\n        setIsEditAvatarPopupOpen(false)\n        setIsOpenedCard(false)\n        setIsDeleteCard(false)\n        setIsNotificationPopupOpen(false)\n    }\n\n    const handleCardClick = (card) => {\n        setSelectedCard(card)\n        setIsOpenedCard(true)\n\n    }\n\n    const handleEditAvatarClick = () => {\n        setIsEditAvatarPopupOpen(true)\n    }\n\n    const handleEditProfileClick = () => {\n        setIsEditProfilePopupOpen(true)\n    }\n\n    const handleLogin = () => {\n        tokenCheck();\n    }\n\n    const handleAddPlaceClick = () => {\n        setIsAddPlacePopupOpen(true)\n    }\n\n    const handleSignOut = () => {\n        localStorage.clear()\n    }\n\n    return (\n\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"page\">\n                <Header logo={logo} email={userEmail} onExit={handleSignOut}/>\n                <Switch>\n                    <Route path={\"/sign-in\"}>\n                        <Login handleLogin={handleLogin}/>\n                    </Route>\n                    <Route path={\"/sign-up\"}>\n                        <Register handleNotification={handleOpenNotificationPopup}/>\n                    </Route>\n                    <ProtectedRoute\n                        path=\"/\"\n                        loggedIn={loggedIn}\n                        onAddPlace={handleAddPlaceClick}\n                        onEditAvatar={handleEditAvatarClick}\n                        onSelectCard={handleCardClick}\n                        onEditProfile={handleEditProfileClick}\n                        cards={cards}\n                        onLikeClick={handleCardLike}\n                        onCardDelete={handleCardDelete}\n                        component={Main}\n                    />\n                </Switch>\n                {/*<Footer/>*/}\n                <RegisterNotificationPopup\n                    isSuccess={isSuccessRegister}\n                    isOpen={isNotificationPopupOpen}\n                    onClose={closeAllPopups}\n                />\n                <ImagePopup card={selectedCard}\n                            isOpened={isOpenedCard}\n                            onClose={closeAllPopups}\n                />\n                <EditProfilePopup isOpen={isEditProfilePopupOpen}\n                                  onClose={closeAllPopups}\n                                  onUpdateUser={handleUpdateUser}\n                />\n                <EditAvatarPopup isOpen={isEditAvatarPopupOpen}\n                                 onClose={closeAllPopups}\n                                 onUpdateAvatar={handleUpdateAvatar}\n                />\n                <AddPlacePopup isOpen={isAddPlacePopupOpen}\n                               onClose={closeAllPopups}\n                               onAddPlace={handleAddPlace}\n                />\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}